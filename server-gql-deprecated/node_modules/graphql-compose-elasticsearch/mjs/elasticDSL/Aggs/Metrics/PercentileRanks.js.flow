/* @flow */

import { InputTypeComposer } from 'graphql-compose';
import { getTypeName, type CommonOpts, desc } from '../../../utils';
import { getCommonsScriptITC } from '../../Commons/Script';
import { getCommonsHdrITC } from '../../Commons/HDR';
import { getNumericFields } from '../../Commons/FieldNames';

export function getPercentileRanksITC<TContext>(
  opts: CommonOpts<TContext>
): InputTypeComposer<TContext> {
  const name = getTypeName('AggsPercentileRanks', opts);
  const description = desc(
    `
    A multi-value metrics aggregation that calculates one or more percentile
    ranks over numeric values extracted from the aggregated documents.
    These values can be extracted either from specific numeric fields
    in the documents, or be generated by a provided script.
    [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-rank-aggregation.html)
  `
  );

  return opts.getOrCreateITC(name, () => ({
    name,
    description,
    fields: {
      field: getNumericFields(opts),
      values: '[Float]',
      hdr: (): InputTypeComposer<TContext> => getCommonsHdrITC(opts),
      missing: 'Float',
      script: (): InputTypeComposer<TContext> => getCommonsScriptITC(opts),
    },
  }));
}
